{
    "parser": "@typescript-eslint/parser",
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended", // Uses the recommended rules from the @typescript-eslint/eslint-plugin
      "prettier", // Turns off all rules that are unnecessary or might conflict with Prettier
      "plugin:prettier/recommended", //Make sure this is always the last configuration in the extends array
      "plugin:import/recommended",
      "plugin:import/typescript"
    ],
    "parserOptions": {
      "ecmaVersion": "latest",
      "sourceType": "module",
      "project": ["./tsconfig.json"]
    },
    "settings": {
      "import/resolver": {
        "typescript": {
          "extensions": [".ts", ".d.ts"]
        }
      }
    },
    "rules": {
      "@typescript-eslint/no-floating-promises": "error",
      "prefer-arrow-callback": "error",
      "@typescript-eslint/no-unused-vars": "error",
      "@typescript-eslint/no-use-before-define": ["error"],
      "@typescript-eslint/ban-ts-comment": "error",
      "prettier/prettier": "error",
      "no-console": ["warn", { "allow": ["warn", "error"] }],
      "@typescript-eslint/explicit-module-boundary-types": "off",
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/no-empty-interface": "off",
      "no-use-before-define": "off",
      "@typescript-eslint/no-non-null-assertion": "off",
      "sort-imports": [
        "error",
        {
          "ignoreCase": true,
          "ignoreDeclarationSort": true
        }
      ],
      "import/no-named-as-default": 0,
      "import/order": [
        "error",
        {
          "groups": ["external", "builtin"],
          "newlines-between": "always"
        }
      ]
    }
  }
  